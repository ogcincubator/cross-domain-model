# A short, descriptive name of this building block collection
name: Cross-domain model

# Short abstract for this collection (optional)
abstract: |
  Defines a cross-domain semantic model by articulating a series of profiles and dependencies on available standards and a minimum set of constraints for application in the spatio-temporal domain.

# Description for this collection (optional)
description: |
  
  These building blocks allow for transparent reuse of a range of semantic models published by OGC and other international standards organisations that may be used to define semantics models for application domains.
  
  Application domains will typically define profiles of these core models to meet specific needs.  Infrastructures may define profiles to support commonality of implementation necessary to exploit infrastructure services.
  
  The Cross-domain model underpins proposed domain models for Agriculture, Oceans and AG4DG.
  By defining these models using this common cross-domain model the interoperability between such domains is enhanced, and made transparent to applications.
 
  Note that metadata models may be defined to exploit these semantics -
  the cross-domain model is agnostic of the various metadata schemas or models that may be used, recognising that most "systems of systems" will have 
  multiple metadata formats in play due to evolution, backwards compatibility requirements and specific metadata needs of different communities and systems.
  
  ![](https://lucid.app/publicSegments/view/eebe9d1b-d2ae-4bb9-a929-1d4414abcd47/image.png)
  
  Defining constraints using SHACL for these building blocks allows for inheritance of validation rules. 
  This will dramatically reduce the complexity of defining and testing domain models in a consistent fashion.
  
  Many such restrictions will relate to the way these models are combined -
  for example the way GeoDCAT, PROV, RDF-Datacube and SOSA may be combined to standardised the way observational data is described using available standards.

# Customize the following prefix (will be prepended to the path of the building blocks):
identifier-prefix: ogc.model.cross-domain.

# List of imports ("default" is an alias for the main OGC Building Blocks Register)
imports:
  - default


# SPARQL configuration (optional)
#   Authentication can be set through the sparql_username and sparql_password GitHub Workflow inputs
#   (see .github/workflow/process-bblocks.yml)
#
# sparql:
#   push: https://example.com/gsp           # SPARQL Graph Store Protocol endpoint for uploading data
#   graph: https://my.bblocks.example.com/  # SPARQL Graph where data will be uploaded
#                                           #  if left empty, the base URL for the publication will be used
#   query: https://example.com/sparql       # SPARQL query endpoint where data will be available
